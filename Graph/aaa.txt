this->dijkstra(begin);
    int dist= t->getValue(), sum=0;
    bool b= false;
    std::stack<Vertex<T>*> track;
    std::stack<int> values;
    std::vector<T> print;
    track.push(s);
    while(track.top()->getData()!=t->getData()){
      std::cout<<track.top()->getData()<<std::endl;
      std::map<Vertex<T> *, int> aux=track.top()->getAdy();
      typename std::map<Vertex<T> *, int>::iterator it=aux.begin();
      for(;it!=aux.end();it++){
        track.push(it->first);
        values.push(it->second);
        /*if(sum>dist){
          sum-=it->second;
          track.pop();
          values.pop();
        }*/
      }
        /*std::cout<<"entre"<<std::endl;
        track.pop();
        sum-=values.top();
        values.pop();*/
    }
    while(!track.empty()){
      print.push_back(track.top()->getData());
      track.pop();
    }
    for(int i=print.size()-1;i>=0;i--){
      std::cout<<print[i]<<", ";
    }
    std::cout<<std::endl;